{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./components/f-code-editor/f-code-editor\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shims.d.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "content",
          "type": {
            "text": "Record<string, string>"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "content",
            "module": "src/shims.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "content",
            "module": "src/shims.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/shims.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/lang-comments-map.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "languageCommentsMap",
          "default": "new Map([\n\t// JavaScript\n\t[\n\t\t\"javascript\",\n\t\t{\n\t\t\tsingleLine: \"//\",\n\t\t\tmultiLine: { start: \"/*\", end: \"*/\" }\n\t\t}\n\t],\n\n\t// TypeScript\n\t[\n\t\t\"typescript\",\n\t\t{\n\t\t\tsingleLine: \"//\",\n\t\t\tmultiLine: { start: \"/*\", end: \"*/\" }\n\t\t}\n\t],\n\n\t// Python\n\t[\n\t\t\"python\",\n\t\t{\n\t\t\tsingleLine: \"#\",\n\t\t\tmultiLine: { start: \"'''\", end: \"'''\" }\n\t\t}\n\t],\n\n\t// Java\n\t[\n\t\t\"java\",\n\t\t{\n\t\t\tsingleLine: \"//\",\n\t\t\tmultiLine: { start: \"/*\", end: \"*/\" }\n\t\t}\n\t],\n\n\t// C++\n\t[\n\t\t\"cpp\",\n\t\t{\n\t\t\tsingleLine: \"//\",\n\t\t\tmultiLine: { start: \"/*\", end: \"*/\" }\n\t\t}\n\t],\n\n\t// C#\n\t[\n\t\t\"csharp\",\n\t\t{\n\t\t\tsingleLine: \"//\",\n\t\t\tmultiLine: { start: \"/*\", end: \"*/\" }\n\t\t}\n\t],\n\n\t// PHP\n\t[\n\t\t\"php\",\n\t\t{\n\t\t\tsingleLine: \"//\",\n\t\t\tmultiLine: { start: \"/*\", end: \"*/\" }\n\t\t}\n\t],\n\n\t// Ruby\n\t[\n\t\t\"ruby\",\n\t\t{\n\t\t\tsingleLine: \"#\",\n\t\t\tmultiLine: { start: \"=begin\", end: \"=end\" }\n\t\t}\n\t],\n\n\t// Swift\n\t[\n\t\t\"swift\",\n\t\t{\n\t\t\tsingleLine: \"//\",\n\t\t\tmultiLine: { start: \"/*\", end: \"*/\" }\n\t\t}\n\t],\n\n\t// Go\n\t[\n\t\t\"go\",\n\t\t{\n\t\t\tsingleLine: \"//\",\n\t\t\tmultiLine: { start: \"/*\", end: \"*/\" }\n\t\t}\n\t],\n\n\t// Rust\n\t[\n\t\t\"rust\",\n\t\t{\n\t\t\tsingleLine: \"//\",\n\t\t\tmultiLine: { start: \"/*\", end: \"*/\" }\n\t\t}\n\t],\n\n\t// Kotlin\n\t[\n\t\t\"kotlin\",\n\t\t{\n\t\t\tsingleLine: \"//\",\n\t\t\tmultiLine: { start: \"/*\", end: \"*/\" }\n\t\t}\n\t],\n\n\t// Dart\n\t[\n\t\t\"dart\",\n\t\t{\n\t\t\tsingleLine: \"//\",\n\t\t\tmultiLine: { start: \"/*\", end: \"*/\" }\n\t\t}\n\t],\n\n\t// HTML (HTML does not support multi-line comments)\n\t[\n\t\t\"html\",\n\t\t{\n\t\t\tsingleLine: \"<!--\",\n\t\t\tmultiLine: null\n\t\t}\n\t],\n\n\t// CSS (CSS does not support multi-line comments)\n\t[\n\t\t\"css\",\n\t\t{\n\t\t\tsingleLine: \"//\",\n\t\t\tmultiLine: null\n\t\t}\n\t],\n\n\t// SCSS (SCSS does not support multi-line comments)\n\t[\n\t\t\"scss\",\n\t\t{\n\t\t\tsingleLine: \"//\",\n\t\t\tmultiLine: null\n\t\t}\n\t],\n\n\t// Less (Less does not support multi-line comments)\n\t[\n\t\t\"less\",\n\t\t{\n\t\t\tsingleLine: \"//\",\n\t\t\tmultiLine: null\n\t\t}\n\t],\n\n\t// JSON (JSON does not support multi-line comments)\n\t[\n\t\t\"json\",\n\t\t{\n\t\t\tsingleLine: \"//\",\n\t\t\tmultiLine: null\n\t\t}\n\t],\n\n\t// YAML (YAML does not support multi-line comments)\n\t[\n\t\t\"yaml\",\n\t\t{\n\t\t\tsingleLine: \"#\",\n\t\t\tmultiLine: null\n\t\t}\n\t]\n])"
        },
        {
          "kind": "variable",
          "name": "languageCommentsRegexMap",
          "default": "new Map([\n\t// JavaScript (single-line comments start with //, and multi-line comments are enclosed between /* and */)\n\t[\n\t\t\"javascript\",\n\t\t{\n\t\t\tsingleLine: /\\/\\/(.*)/,\n\t\t\tmultiLine: /\\/\\*([\\s\\S]*?)\\*\\//\n\t\t}\n\t],\n\n\t// TypeScript (single-line comments start with //, and multi-line comments are enclosed between /* and */)\n\t[\n\t\t\"typescript\",\n\t\t{\n\t\t\tsingleLine: /\\/\\/(.*)/,\n\t\t\tmultiLine: /\\/\\*([\\s\\S]*?)\\*\\//\n\t\t}\n\t],\n\n\t// Python (single-line comments start with #, and multi-line comments are enclosed between ''' or \"\"\")\n\t[\n\t\t\"python\",\n\t\t{\n\t\t\tsingleLine: /#(.*)/,\n\t\t\tmultiLine: /(['\"]{3})([\\s\\S]*?)\\1/\n\t\t}\n\t],\n\n\t// Java (single-line comments start with //, and multi-line comments are enclosed between /* and */)\n\t[\n\t\t\"java\",\n\t\t{\n\t\t\tsingleLine: /\\/\\/(.*)/,\n\t\t\tmultiLine: /\\/\\*([\\s\\S]*?)\\*\\//\n\t\t}\n\t],\n\n\t// C++ (single-line comments start with //, and multi-line comments are enclosed between /* and */)\n\t[\n\t\t\"cpp\",\n\t\t{\n\t\t\tsingleLine: /\\/\\/(.*)/,\n\t\t\tmultiLine: /\\/\\*([\\s\\S]*?)\\*\\//\n\t\t}\n\t],\n\n\t// C# (single-line comments start with //, and multi-line comments are enclosed between /* and */)\n\t[\n\t\t\"csharp\",\n\t\t{\n\t\t\tsingleLine: /\\/\\/(.*)/,\n\t\t\tmultiLine: /\\/\\*([\\s\\S]*?)\\*\\//\n\t\t}\n\t],\n\n\t// PHP (single-line comments start with // or #, and multi-line comments are enclosed between /* and */)\n\t[\n\t\t\"php\",\n\t\t{\n\t\t\tsingleLine: /(\\/\\/|#)(.*)/,\n\t\t\tmultiLine: /\\/\\*([\\s\\S]*?)\\*\\//\n\t\t}\n\t],\n\n\t// Ruby (single-line comments start with #, and multi-line comments are enclosed between =begin and =end)\n\t[\n\t\t\"ruby\",\n\t\t{\n\t\t\tsingleLine: /#(.*)/,\n\t\t\tmultiLine: /(?<=^=begin)([\\s\\S]*?)(?=^=end)/m\n\t\t}\n\t],\n\n\t// Swift (single-line comments start with //, and multi-line comments are enclosed between /* and */)\n\t[\n\t\t\"swift\",\n\t\t{\n\t\t\tsingleLine: /\\/\\/(.*)/,\n\t\t\tmultiLine: /\\/\\*([\\s\\S]*?)\\*\\//\n\t\t}\n\t],\n\n\t// Go (single-line comments start with //, and multi-line comments are enclosed between /* and */)\n\t[\n\t\t\"go\",\n\t\t{\n\t\t\tsingleLine: /\\/\\/(.*)/,\n\t\t\tmultiLine: /\\/\\*([\\s\\S]*?)\\*\\//\n\t\t}\n\t],\n\n\t// Rust (single-line comments start with //, and multi-line comments are enclosed between /* and */)\n\t[\n\t\t\"rust\",\n\t\t{\n\t\t\tsingleLine: /\\/\\/(.*)/,\n\t\t\tmultiLine: /\\/\\*([\\s\\S]*?)\\*\\//\n\t\t}\n\t],\n\n\t// Kotlin (single-line comments start with //, and multi-line comments are enclosed between /* and */)\n\t[\n\t\t\"kotlin\",\n\t\t{\n\t\t\tsingleLine: /\\/\\/(.*)/,\n\t\t\tmultiLine: /\\/\\*([\\s\\S]*?)\\*\\//\n\t\t}\n\t],\n\n\t// Dart (single-line comments start with //, and multi-line comments are enclosed between /* and */)\n\t[\n\t\t\"dart\",\n\t\t{\n\t\t\tsingleLine: /\\/\\/(.*)/,\n\t\t\tmultiLine: /\\/\\*([\\s\\S]*?)\\*\\//\n\t\t}\n\t],\n\n\t// HTML (single-line comments start with <!--, and multi-line comments are not supported)\n\t[\n\t\t\"html\",\n\t\t{\n\t\t\tsingleLine: /<!--(.*?)-->/,\n\t\t\tmultiLine: null\n\t\t}\n\t],\n\n\t// CSS (single-line comments start with /* or //, and multi-line comments are not supported)\n\t[\n\t\t\"css\",\n\t\t{\n\t\t\tsingleLine: /\\/\\*([\\s\\S]*?)\\*\\/|\\/\\/(.*)/,\n\t\t\tmultiLine: null\n\t\t}\n\t],\n\n\t// SCSS (single-line comments start with /* or //, and multi-line comments are not supported)\n\t[\n\t\t\"scss\",\n\t\t{\n\t\t\tsingleLine: /\\/\\*([\\s\\S]*?)\\*\\/|\\/\\/(.*)/,\n\t\t\tmultiLine: null\n\t\t}\n\t],\n\n\t// Less (single-line comments start with //, and multi-line comments are not supported)\n\t[\n\t\t\"less\",\n\t\t{\n\t\t\tsingleLine: /\\/\\/(.*)/,\n\t\t\tmultiLine: null\n\t\t}\n\t],\n\n\t// JSON (single-line comments start with // or /* or #, and multi-line comments are not supported)\n\t[\n\t\t\"json\",\n\t\t{\n\t\t\tsingleLine: /(\\/\\/|#)[^\\n\\r]*|\\/\\*[\\s\\S]*?\\*\\//,\n\t\t\tmultiLine: null\n\t\t}\n\t],\n\n\t// YAML (single-line comments start with #, and multi-line comments are not supported)\n\t[\n\t\t\"yaml\",\n\t\t{\n\t\t\tsingleLine: /#(.*)/,\n\t\t\tmultiLine: null\n\t\t}\n\t]\n])"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "languageCommentsMap",
          "declaration": {
            "name": "languageCommentsMap",
            "module": "src/utils/lang-comments-map.ts"
          }
        },
        {
          "kind": "js",
          "name": "languageCommentsRegexMap",
          "declaration": {
            "name": "languageCommentsRegexMap",
            "module": "src/utils/lang-comments-map.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-code-editor/f-code-editor.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FCodeEditor",
          "members": [
            {
              "kind": "field",
              "name": "editor",
              "type": {
                "text": "monaco.editor.IStandaloneCodeEditor | undefined"
              },
              "description": "editor instance"
            },
            {
              "kind": "field",
              "name": "code",
              "type": {
                "text": "string | undefined"
              },
              "description": "actual code to display in editor",
              "attribute": "code"
            },
            {
              "kind": "field",
              "name": "language",
              "type": {
                "text": "FCodeEditorLanguage | undefined"
              },
              "default": "\"typescript\"",
              "description": "language of code",
              "attribute": "language",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "height",
              "type": {
                "text": "string | undefined"
              },
              "default": "\"100%\"",
              "description": "height to is required to create editor",
              "attribute": "height"
            },
            {
              "kind": "field",
              "name": "width",
              "type": {
                "text": "string | undefined"
              },
              "default": "\"100%\"",
              "description": "width to is required to create editor",
              "attribute": "width"
            },
            {
              "kind": "field",
              "name": "settings",
              "type": {
                "text": "FCodeEditorSettings | undefined"
              },
              "default": "{}",
              "attribute": "settings"
            },
            {
              "kind": "field",
              "name": "services",
              "type": {
                "text": "FCodeEditorServices | undefined"
              },
              "default": "{}",
              "attribute": "services"
            },
            {
              "kind": "field",
              "name": "hiddenDecorations",
              "type": {
                "text": "string[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "commentLineDecorations",
              "type": {
                "text": "string[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "commentsMap",
              "default": "new Map()"
            },
            {
              "kind": "field",
              "name": "removedCommentsMap",
              "default": "new Map()"
            },
            {
              "kind": "method",
              "name": "toggleComments"
            },
            {
              "kind": "method",
              "name": "restoreComments"
            },
            {
              "kind": "method",
              "name": "createRenderRoot",
              "description": "monoco editor never works in shadow dom"
            }
          ],
          "attributes": [
            {
              "name": "code",
              "type": {
                "text": "string | undefined"
              },
              "description": "actual code to display in editor",
              "fieldName": "code"
            },
            {
              "name": "language",
              "type": {
                "text": "FCodeEditorLanguage | undefined"
              },
              "default": "\"typescript\"",
              "description": "language of code",
              "fieldName": "language"
            },
            {
              "name": "height",
              "type": {
                "text": "string | undefined"
              },
              "default": "\"100%\"",
              "description": "height to is required to create editor",
              "fieldName": "height"
            },
            {
              "name": "width",
              "type": {
                "text": "string | undefined"
              },
              "default": "\"100%\"",
              "description": "width to is required to create editor",
              "fieldName": "width"
            },
            {
              "name": "settings",
              "type": {
                "text": "FCodeEditorSettings | undefined"
              },
              "default": "{}",
              "fieldName": "settings"
            },
            {
              "name": "services",
              "type": {
                "text": "FCodeEditorServices | undefined"
              },
              "default": "{}",
              "fieldName": "services"
            }
          ],
          "superclass": {
            "name": "FRoot",
            "package": "@cldcvr/flow-core"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FCodeEditor",
          "declaration": {
            "name": "FCodeEditor",
            "module": "src/components/f-code-editor/f-code-editor.ts"
          }
        }
      ]
    }
  ]
}
