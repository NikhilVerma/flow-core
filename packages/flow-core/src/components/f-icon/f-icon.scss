@use "sass:map";
@import "./../../mixins/scss/mixins";

$sizes: (
  "x-small": 12px,
  "small": 16px,
  "medium": 20px,
  "large": 24px,
  "x-large": 36px,
);

$states: (
  "default": (
    "fill": var(--color-icon-default),
    "hover-fill": var(--color-icon-default-hover),
  ),
  "secondary": (
    "fill": var(--color-icon-secondary),
    "hover-fill": var(--color-icon-secondary-hover),
  ),
  "subtle": (
    "fill": var(--color-icon-subtle),
    "hover-fill": var(--color-icon-subtle-hover),
  ),
  "primary": (
    "fill": var(--color-primary-default),
    "hover-fill": var(--color-primary-default-hover),
  ),
  "success": (
    "fill": var(--color-success-default),
    "hover-fill": var(--color-success-default-hover),
  ),
  "danger": (
    "fill": var(--color-danger-default),
    "hover-fill": var(--color-danger-default-hover),
  ),
  "warning": (
    "fill": var(--color-warning-default),
    "hover-fill": var(--color-warning-default-hover),
  ),
  "neutral": (
    "fill": var(--color-neutral-default),
    "hover-fill": var(--color-neutral-default-hover),
  ),
);

:host {
  display: inline-flex;
  vertical-align: top;
  div.f-icon {
    @include base();
    display: inline-flex;
    align-items: center;
    justify-content: center;

    @each $state, $value in $states {
      &[state="#{$state}"] {
        svg {
          fill: map.get($value, "fill");
          stroke: none;
          *[fill^="white"] {
            fill: map.get($value, "fill");
          }
        }

        &[clickable] {
          cursor: pointer;
          &:hover {
            svg {
              fill: map.get($value, "hover-fill");
              stroke: none;
              *[fill^="white"] {
                fill: map.get($value, "hover-fill");
              }
            }
          }
        }
      }
    }
    &.fill-button-surface {
      svg {
        fill: var(--color-surface-default) !important;
        stroke: none;
        *[fill^="white"] {
          fill: var(--color-surface-default) !important;
        }
      }

      &:hover {
        svg {
          fill: var(--color-surface-default-hover);
          stroke: none;
          *[fill^="white"] {
            fill: var(--color-surface-default-hover);
          }
        }
      }
    }

    /**
  * Iterating over sizes with padding, fontsize, height
  **/
    @each $size, $value in $sizes {
      &[size="#{$size}"] {
        font-size: $value;
        line-height: $value;
        width: $value;
        height: $value;
        svg,
        img {
          width: $value;
          height: $value;
        }
      }
    }

    &[disabled] {
      @include disabled();
    }

    &[loading] {
      @include rotate("svg");
    }

    &:focus {
      outline: var(--color-highlight-default) solid 2px;
    }
  }
}
