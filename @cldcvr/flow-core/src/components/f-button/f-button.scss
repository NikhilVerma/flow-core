@use "sass:map";
@use "sass:math";
@import "./../../mixins/scss/mixins";

$states: (
  "primary": var(--color-primary-default),
  "neutral": var(--color-neutral-default),
  "success": var(--color-success-default),
  "warning": var(--color-warning-default),
  "danger": var(--color-danger-default),
);

$states-hover: (
  "primary": var(--color-primary-default-hover),
  "neutral": var(--color-neutral-default-hover),
  "success": var(--color-success-default-hover),
  "warning": var(--color-warning-default-hover),
  "danger": var(--color-danger-default-hover),
);

$sizes: (
  "x-small": 20px,
  "small": 28px,
  "medium": 36px,
  "large": 44px,
);
$horizontal-padding: (
  "x-small": 0px 8px,
  "small": 0px 12px,
  "medium": 0px 16px,
  "large": 0px 20px,
);

$font-sizes: (
  "x-small": 10px,
  "small": 12px,
  "medium": 14px,
  "large": 16px,
);
f-button {
  @include base();
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-weight: 600;
  text-transform: uppercase;
  color: var(--color-surface-default);

  /**
  * Iterating over states with variants
  **/
  @each $state, $color in $states {
    &[state="#{$state}"][variant="fill"] {
      background-color: $color;
      border: 1px solid $color; // added to match width of outline variant
      &:hover {
        background-color: map.get($states-hover, $state);
      }
    }

    &[state="#{$state}"][variant="outline"] {
      background-color: transparent;
      border: 1px solid $color;
      color: $color;
      &:hover {
        border: 1px solid map.get($states-hover, $state);
        color: $color;
      }
    }

    &[state="#{$state}"][variant="transparent"] {
      background-color: transparent;
      border: 1px solid transparent;
      color: $color;
      &:hover {
        border: 1px solid transparent;
        color: $color;
      }
    }
  }

  /**
  * Iterating over sizes with padding, fontsize, height
  **/
  @each $size, $value in $sizes {
    &[size="#{$size}"] {
      height: $value;
      padding: map.get($horizontal-padding, $size);
      font-size: map.get($font-sizes, $size);
      &[shape="round"] {
        border-radius: math.div($value, 2);
      }
    }
  }

  &[shape="curved"] {
    border-radius: 4px;
  }

  &[shape="block"] {
    display: flex;
  }
}
